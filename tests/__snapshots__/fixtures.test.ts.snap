// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixture > tests/fixtures/args.js 1`] = `
"0 === 0;
"1" === '1';
false === false;
null === null;
undefined === undefined;
console.log({"a":"b"});
console.log([1,false,"hello"]);
"
`;

exports[`fixture > tests/fixtures/basic.js 1`] = `
"0.5 === 0.5;
1 === 1;
2 === 2;
3 === 3;
1 === 1;

const { bar = 1 } = {};
"
`;

exports[`fixture > tests/fixtures/css.js 1`] = `
"const style = {"color":"red"};
"
`;

exports[`fixture > tests/fixtures/ctx.js 1`] = `
""ctx.js" === 'ctx.js';
"
`;

exports[`fixture > tests/fixtures/dedent.js 1`] = `
"const msg = "if (true) {\\n  const a = 'b'\\n}";
"
`;

exports[`fixture > tests/fixtures/import-namespace.js 1`] = `
"0.5 === 0.5;
"
`;

exports[`fixture > tests/fixtures/nested-object.js 1`] = `
""foo" === 'foo';
"
`;

exports[`fixture > tests/fixtures/non-macros.js 1`] = `
"function getRandom() {
  return Math.random()
}

function toString(v) {
  return v.toString()
}

{
  const getRandom = () => 2;
  getRandom() === 2;
}

''.toString();

const genHex = () =>
  Math.floor(Math.random() * 255)
    .toString(16)
    .padStart(2, '0');

const foo = {
  toString: '',
};

class TestCls {
  toString() {}
  #toString() {}
}
"
`;

exports[`fixture > tests/fixtures/promise.js 1`] = `
"const a = "ok";
const b = "ok";
"
`;
